name: Test Build

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        goos:
          - openwrt
        goarch:
          - arm
          - arm64
        goarm:
          - 5
          - 6
          - 7
        include:
          - goos: luci
            goarch: all
          - goos: luci-compat
            goarch: all
      fail-fast: false

    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      CGO_ENABLED: 0
    steps:
      - uses: actions/checkout@v2
      - name: Build
        continue-on-error: true
        run: |
          sudo timedatectl set-timezone "Asia/Shanghai"
          cd ${{ github.workspace }}/package/
          # mkdir -p output
          # ./build-pkg.sh --platform $GOOS --arch $GOARCH --filearch $GOARCH-$GOOS --outputdir ${{ github.workspace }}/package/output
          mkdir -p output-static
          ./build-pkg.sh --platform $GOOS --arch $GOARCH --static --filearch $GOARCH-$GOOS-all --outputdir ${{ github.workspace }}/package/output-static
      - name: Upload To Artifact
        uses: actions/upload-artifact@v2
        with:
#          name: smartdns-${{ matrix.goos }}-${{ matrix.goarch }}
#          path: ${{ github.workspace }}/package/output/
#      - uses: actions/upload-artifact@v2
#        with:
          name: smartdns-${{ matrix.goos }}-${{ matrix.goarch }}-static
          path: ${{ github.workspace }}/package/output-static/
#      - name: Upload To One Artifact
#        uses: actions/upload-artifact@v2
#        with:
#          name: smartdns-package
#          path: ${{ github.workspace }}/package/output/
#      - uses: actions/upload-artifact@v2
#        with:
#          name: smartdns-static-package
#          path: ${{ github.workspace }}/package/output-static/


      - name: Generate release tag
        id: tag
        run: |
          echo "::set-output name=release_tag::$(date +"%Y.%m.%d")-${{github.run_id}}"
          touch release.txt
          echo "同步更新上游代码" >> release.txt
          echo ${{ github.sha }} >> Release.txt
          echo "::set-output name=status::success"
      - name: Upload firmware to release
        uses: softprops/action-gh-release@v1
        if: steps.tag.outputs.status == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          body_path: release.txt
          files: ${{ github.workspace }}/package/output-static/*
